<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name></display-name>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>/res/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>/favicon.ico</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>/robots.txt</url-pattern>
  </servlet-mapping>
    <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>/equdao.apk</url-pattern>
  </servlet-mapping>
  <welcome-file-list>
    <welcome-file>/home.html</welcome-file>
  </welcome-file-list>
  <servlet>
    <servlet-name>spring-mvc</servlet-name>
    <servlet-class>  
            org.springframework.web.servlet.DispatcherServlet  
        </servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/applicationContext.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring-mvc</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
	
  <!-- 过滤编码，防止乱码-->
  <filter>
    <filter-name>Encoding</filter-name>
    <filter-class>  
            org.springframework.web.filter.CharacterEncodingFilter  
        </filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>Encoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  <!-- <listener> 
		<listener-class> 
		org.springframework.web.context.ContextLoaderListener 
		</listener-class> 
	</listener>
  配置登陆过滤器  后台没有登陆 或则登陆超时的情况下 让用户重新登陆
     filter 拦截请求  
    <filter>  
        <filter-name>DelegatingFilterProxy</filter-name>  
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
        <init-param>  
            <param-name>targetBeanName</param-name>  
            spring中bean的id  
            <param-value>LoginFilter</param-value>  
        </init-param>  
        <init-param>  
            <param-name>targetFilterLifecycle</param-name>  
            <param-value>true</param-value>  
        </init-param> 
    </filter>  
    只拦截/account/*请求  
    <filter-mapping>  
        <filter-name>DelegatingFilterProxy</filter-name>  
        <url-pattern>/account/*</url-pattern>  
    </filter-mapping>  
  
   -->
  
  <!-- 阿里巴巴高性能druid数据源相关配置 -->
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    <init-param>
      <param-name>resetEnable</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
    <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
    	
   
    <error-page>
     <error-code>404</error-code>
    <location>/WEB-INF/page/404.jsp</location>
</error-page>

  <error-page>
     <error-code>400</error-code>
    <location>/</location>
</error-page>
</web-app>